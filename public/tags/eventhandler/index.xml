<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/feed_style.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="https://www.rssboard.org/media-rss">
  <channel>
    <title>Eventhandler on RIRSC</title>
    <link>http://localhost:1313/tags/eventhandler/</link>
    <description>Recent content in Eventhandler on RIRSC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Ricardo LÃ³pez</copyright>
    <lastBuildDate>Thu, 08 Oct 2020 11:39:57 +0200</lastBuildDate><atom:link href="http://localhost:1313/tags/eventhandler/index.xml" rel="self" type="application/rss+xml" /><icon>http://localhost:1313/Rirsc_Logo.svg</icon>
    
    
    <item>
      <title>Map Mouse Back and Forward Buttons in Your GTK App</title>
      <link>http://localhost:1313/posts/map_mouse_back_and_forward_buttons_in_your_gtk_app/</link>
      <pubDate>Thu, 08 Oct 2020 11:39:57 +0200</pubDate>
      
      <guid>http://localhost:1313/posts/map_mouse_back_and_forward_buttons_in_your_gtk_app/</guid>
      <description><![CDATA[<p>The back and forward buttons on your mouse are incredibly useful, at least for me. I use them all the time!</p>
<p>I couldn&rsquo;t find a proper way to map it on my app until I asked on the GTK Matrix chatroom, there <a href="https://github.com/baedert">baedert</a> sent me a couple of links to how he did it in his app corebird.</p>
<p>I translated the code to Python and decided to make a blog post to archive the procedure.</p>
<p>First, here&rsquo;s a function that creates the &ldquo;gesture&rdquo; and assigns it to a widget and a callback function</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">add_mouse_button_accel</span>(widget, function):
</span></span><span style="display:flex;"><span>    gesture <span style="color:#ff79c6">=</span> Gtk<span style="color:#ff79c6">.</span>GestureMultiPress<span style="color:#ff79c6">.</span>new(widget)
</span></span><span style="display:flex;"><span>    gesture<span style="color:#ff79c6">.</span>set_button(<span style="color:#bd93f9">0</span>)
</span></span><span style="display:flex;"><span>    gesture<span style="color:#ff79c6">.</span>set_propagation_phase(Gtk<span style="color:#ff79c6">.</span>PropagationPhase<span style="color:#ff79c6">.</span>CAPTURE)
</span></span><span style="display:flex;"><span>    gesture<span style="color:#ff79c6">.</span>connect(<span style="color:#f1fa8c">&#39;pressed&#39;</span>, function)
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> gesture
</span></span></code></pre></div><p>As you may have noticed, this function returns the created gesture. You may think there is no need for it and ideally you&rsquo;d be right.</p>
<p>There&rsquo;s just a small issue: due to something that I could only identify as a bug in GTK, you need to keep the <code>Gtk.GestureMultiPress</code> object around, otherwise it gets destroyed and the button clicks are no longer registered.</p>
<p>Once the gesture is returned, you can assign it to something that stays in memory (or you can modify this function and do something like <code>widget.mouse_accel_gesture = gesture</code> and be done with it).</p>
<p>As for the function associated with the mouse click, here&rsquo;s a template you can use:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">on_mouse_event</span>(gesture, n_press, x, y):
</span></span><span style="display:flex;"><span>    btn <span style="color:#ff79c6">=</span> gesture<span style="color:#ff79c6">.</span>get_current_button()
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> btn <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">8</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#6272a4"># Handle the Back button here</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">elif</span> btn <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">9</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#6272a4"># Handle the Forward button here</span>
</span></span></code></pre></div><p>There you go, hope it helps. If you have any trouble feel free to leave a comment or contact me (contact info can be found <a href="/pages/about">in the about page</a>)</p>
]]></description>
      
    </item>
    
    
  </channel>
</rss>
